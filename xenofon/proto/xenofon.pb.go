// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.29.3
// source: proto/xenofon.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Empty request messages since these endpoints require no body
type HealthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_xenofon_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_xenofon_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_proto_xenofon_proto_rawDescGZIP(), []int{0}
}

type OptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OptionsRequest) Reset() {
	*x = OptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_xenofon_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionsRequest) ProtoMessage() {}

func (x *OptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_xenofon_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionsRequest.ProtoReflect.Descriptor instead.
func (*OptionsRequest) Descriptor() ([]byte, []int) {
	return file_proto_xenofon_proto_rawDescGZIP(), []int{1}
}

// Response message for health check
type HealthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Healthy        bool            `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Time           string          `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Version        string          `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	DatabaseHealth *DatabaseHealth `protobuf:"bytes,4,opt,name=database_health,json=databaseHealth,proto3" json:"database_health,omitempty"`
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_xenofon_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_xenofon_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_proto_xenofon_proto_rawDescGZIP(), []int{2}
}

func (x *HealthResponse) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *HealthResponse) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *HealthResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *HealthResponse) GetDatabaseHealth() *DatabaseHealth {
	if x != nil {
		return x.DatabaseHealth
	}
	return nil
}

// Nested message for database health details
type DatabaseHealth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Healthy       bool   `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	ClusterName   string `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	ServerName    string `protobuf:"bytes,3,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
	ServerVersion string `protobuf:"bytes,4,opt,name=server_version,json=serverVersion,proto3" json:"server_version,omitempty"`
}

func (x *DatabaseHealth) Reset() {
	*x = DatabaseHealth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_xenofon_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseHealth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseHealth) ProtoMessage() {}

func (x *DatabaseHealth) ProtoReflect() protoreflect.Message {
	mi := &file_proto_xenofon_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseHealth.ProtoReflect.Descriptor instead.
func (*DatabaseHealth) Descriptor() ([]byte, []int) {
	return file_proto_xenofon_proto_rawDescGZIP(), []int{3}
}

func (x *DatabaseHealth) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *DatabaseHealth) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *DatabaseHealth) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *DatabaseHealth) GetServerVersion() string {
	if x != nil {
		return x.ServerVersion
	}
	return ""
}

// Response message for quiz options
type AggregatedOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Themes []*Theme `protobuf:"bytes,1,rep,name=themes,proto3" json:"themes,omitempty"`
}

func (x *AggregatedOptions) Reset() {
	*x = AggregatedOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_xenofon_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregatedOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregatedOptions) ProtoMessage() {}

func (x *AggregatedOptions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_xenofon_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregatedOptions.ProtoReflect.Descriptor instead.
func (*AggregatedOptions) Descriptor() ([]byte, []int) {
	return file_proto_xenofon_proto_rawDescGZIP(), []int{4}
}

func (x *AggregatedOptions) GetThemes() []*Theme {
	if x != nil {
		return x.Themes
	}
	return nil
}

// Structure for quiz themes
type Theme struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Segments []*Segment `protobuf:"bytes,2,rep,name=segments,proto3" json:"segments,omitempty"`
}

func (x *Theme) Reset() {
	*x = Theme{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_xenofon_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Theme) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Theme) ProtoMessage() {}

func (x *Theme) ProtoReflect() protoreflect.Message {
	mi := &file_proto_xenofon_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Theme.ProtoReflect.Descriptor instead.
func (*Theme) Descriptor() ([]byte, []int) {
	return file_proto_xenofon_proto_rawDescGZIP(), []int{5}
}

func (x *Theme) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Theme) GetSegments() []*Segment {
	if x != nil {
		return x.Segments
	}
	return nil
}

// Structure for segments within a theme
type Segment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MaxSet float32 `protobuf:"fixed32,2,opt,name=max_set,json=maxSet,proto3" json:"max_set,omitempty"`
}

func (x *Segment) Reset() {
	*x = Segment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_xenofon_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Segment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Segment) ProtoMessage() {}

func (x *Segment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_xenofon_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Segment.ProtoReflect.Descriptor instead.
func (*Segment) Descriptor() ([]byte, []int) {
	return file_proto_xenofon_proto_rawDescGZIP(), []int{6}
}

func (x *Segment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Segment) GetMaxSet() float32 {
	if x != nil {
		return x.MaxSet
	}
	return 0
}

// Request message for creating a quiz question
type CreationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Theme        string   `protobuf:"bytes,1,opt,name=theme,proto3" json:"theme,omitempty"`
	Set          string   `protobuf:"bytes,2,opt,name=set,proto3" json:"set,omitempty"`
	Segment      string   `protobuf:"bytes,3,opt,name=segment,proto3" json:"segment,omitempty"` // Optional
	ExcludeWords []string `protobuf:"bytes,4,rep,name=exclude_words,json=excludeWords,proto3" json:"exclude_words,omitempty"`
}

func (x *CreationRequest) Reset() {
	*x = CreationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_xenofon_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreationRequest) ProtoMessage() {}

func (x *CreationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_xenofon_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreationRequest.ProtoReflect.Descriptor instead.
func (*CreationRequest) Descriptor() ([]byte, []int) {
	return file_proto_xenofon_proto_rawDescGZIP(), []int{7}
}

func (x *CreationRequest) GetTheme() string {
	if x != nil {
		return x.Theme
	}
	return ""
}

func (x *CreationRequest) GetSet() string {
	if x != nil {
		return x.Set
	}
	return ""
}

func (x *CreationRequest) GetSegment() string {
	if x != nil {
		return x.Segment
	}
	return ""
}

func (x *CreationRequest) GetExcludeWords() []string {
	if x != nil {
		return x.ExcludeWords
	}
	return nil
}

// Request message for checking an answer
type AnswerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Theme    string `protobuf:"bytes,1,opt,name=theme,proto3" json:"theme,omitempty"`
	Set      string `protobuf:"bytes,2,opt,name=set,proto3" json:"set,omitempty"`
	Segment  string `protobuf:"bytes,3,opt,name=segment,proto3" json:"segment,omitempty"`
	Answer   string `protobuf:"bytes,4,opt,name=answer,proto3" json:"answer,omitempty"`
	QuizWord string `protobuf:"bytes,5,opt,name=quiz_word,json=quizWord,proto3" json:"quiz_word,omitempty"`
}

func (x *AnswerRequest) Reset() {
	*x = AnswerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_xenofon_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnswerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerRequest) ProtoMessage() {}

func (x *AnswerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_xenofon_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerRequest.ProtoReflect.Descriptor instead.
func (*AnswerRequest) Descriptor() ([]byte, []int) {
	return file_proto_xenofon_proto_rawDescGZIP(), []int{8}
}

func (x *AnswerRequest) GetTheme() string {
	if x != nil {
		return x.Theme
	}
	return ""
}

func (x *AnswerRequest) GetSet() string {
	if x != nil {
		return x.Set
	}
	return ""
}

func (x *AnswerRequest) GetSegment() string {
	if x != nil {
		return x.Segment
	}
	return ""
}

func (x *AnswerRequest) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *AnswerRequest) GetQuizWord() string {
	if x != nil {
		return x.QuizWord
	}
	return ""
}

type QuizResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FullSentence string              `protobuf:"bytes,1,opt,name=fullSentence,proto3" json:"fullSentence,omitempty"`
	Translation  string              `protobuf:"bytes,2,opt,name=translation,proto3" json:"translation,omitempty"`
	Reference    string              `protobuf:"bytes,3,opt,name=reference,proto3" json:"reference,omitempty"`
	Quiz         *Quiz               `protobuf:"bytes,4,opt,name=quiz,proto3" json:"quiz,omitempty"`
	GrammarQuiz  []*GrammarQuizAdded `protobuf:"bytes,5,rep,name=grammarQuiz,proto3" json:"grammarQuiz,omitempty"`
}

func (x *QuizResponse) Reset() {
	*x = QuizResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_xenofon_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuizResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuizResponse) ProtoMessage() {}

func (x *QuizResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_xenofon_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuizResponse.ProtoReflect.Descriptor instead.
func (*QuizResponse) Descriptor() ([]byte, []int) {
	return file_proto_xenofon_proto_rawDescGZIP(), []int{9}
}

func (x *QuizResponse) GetFullSentence() string {
	if x != nil {
		return x.FullSentence
	}
	return ""
}

func (x *QuizResponse) GetTranslation() string {
	if x != nil {
		return x.Translation
	}
	return ""
}

func (x *QuizResponse) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *QuizResponse) GetQuiz() *Quiz {
	if x != nil {
		return x.Quiz
	}
	return nil
}

func (x *QuizResponse) GetGrammarQuiz() []*GrammarQuizAdded {
	if x != nil {
		return x.GrammarQuiz
	}
	return nil
}

type Quiz struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuizItem      string     `protobuf:"bytes,1,opt,name=quizItem,proto3" json:"quizItem,omitempty"`
	NumberOfItems int32      `protobuf:"varint,2,opt,name=numberOfItems,proto3" json:"numberOfItems,omitempty"`
	Options       []*Options `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *Quiz) Reset() {
	*x = Quiz{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_xenofon_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Quiz) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quiz) ProtoMessage() {}

func (x *Quiz) ProtoReflect() protoreflect.Message {
	mi := &file_proto_xenofon_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quiz.ProtoReflect.Descriptor instead.
func (*Quiz) Descriptor() ([]byte, []int) {
	return file_proto_xenofon_proto_rawDescGZIP(), []int{10}
}

func (x *Quiz) GetQuizItem() string {
	if x != nil {
		return x.QuizItem
	}
	return ""
}

func (x *Quiz) GetNumberOfItems() int32 {
	if x != nil {
		return x.NumberOfItems
	}
	return 0
}

func (x *Quiz) GetOptions() []*Options {
	if x != nil {
		return x.Options
	}
	return nil
}

type Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuizWord string `protobuf:"bytes,1,opt,name=quizWord,proto3" json:"quizWord,omitempty"`
}

func (x *Options) Reset() {
	*x = Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_xenofon_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Options) ProtoMessage() {}

func (x *Options) ProtoReflect() protoreflect.Message {
	mi := &file_proto_xenofon_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Options.ProtoReflect.Descriptor instead.
func (*Options) Descriptor() ([]byte, []int) {
	return file_proto_xenofon_proto_rawDescGZIP(), []int{11}
}

func (x *Options) GetQuizWord() string {
	if x != nil {
		return x.QuizWord
	}
	return ""
}

type GrammarQuizAdded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrectAnswer    string     `protobuf:"bytes,1,opt,name=correctAnswer,proto3" json:"correctAnswer,omitempty"`
	WordInText       string     `protobuf:"bytes,2,opt,name=wordInText,proto3" json:"wordInText,omitempty"`
	ExtraInformation string     `protobuf:"bytes,3,opt,name=extraInformation,proto3" json:"extraInformation,omitempty"`
	Options          []*Options `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *GrammarQuizAdded) Reset() {
	*x = GrammarQuizAdded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_xenofon_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrammarQuizAdded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrammarQuizAdded) ProtoMessage() {}

func (x *GrammarQuizAdded) ProtoReflect() protoreflect.Message {
	mi := &file_proto_xenofon_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrammarQuizAdded.ProtoReflect.Descriptor instead.
func (*GrammarQuizAdded) Descriptor() ([]byte, []int) {
	return file_proto_xenofon_proto_rawDescGZIP(), []int{12}
}

func (x *GrammarQuizAdded) GetCorrectAnswer() string {
	if x != nil {
		return x.CorrectAnswer
	}
	return ""
}

func (x *GrammarQuizAdded) GetWordInText() string {
	if x != nil {
		return x.WordInText
	}
	return ""
}

func (x *GrammarQuizAdded) GetExtraInformation() string {
	if x != nil {
		return x.ExtraInformation
	}
	return ""
}

func (x *GrammarQuizAdded) GetOptions() []*Options {
	if x != nil {
		return x.Options
	}
	return nil
}

type AnswerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Correct     bool     `protobuf:"varint,1,opt,name=correct,proto3" json:"correct,omitempty"`
	QuizWord    string   `protobuf:"bytes,2,opt,name=quizWord,proto3" json:"quizWord,omitempty"`
	WordsInText []string `protobuf:"bytes,3,rep,name=wordsInText,proto3" json:"wordsInText,omitempty"`
}

func (x *AnswerResponse) Reset() {
	*x = AnswerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_xenofon_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnswerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerResponse) ProtoMessage() {}

func (x *AnswerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_xenofon_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerResponse.ProtoReflect.Descriptor instead.
func (*AnswerResponse) Descriptor() ([]byte, []int) {
	return file_proto_xenofon_proto_rawDescGZIP(), []int{13}
}

func (x *AnswerResponse) GetCorrect() bool {
	if x != nil {
		return x.Correct
	}
	return false
}

func (x *AnswerResponse) GetQuizWord() string {
	if x != nil {
		return x.QuizWord
	}
	return ""
}

func (x *AnswerResponse) GetWordsInText() []string {
	if x != nil {
		return x.WordsInText
	}
	return nil
}

var File_proto_xenofon_proto protoreflect.FileDescriptor

var file_proto_xenofon_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x78, 0x65, 0x6e, 0x6f, 0x66, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x61, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x61, 0x5f,
	0x78, 0x65, 0x6e, 0x6f, 0x66, 0x6f, 0x6e, 0x22, 0x0f, 0x0a, 0x0d, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x10, 0x0a, 0x0e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa3, 0x01, 0x0a, 0x0e, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x61, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x61, 0x5f, 0x78, 0x65, 0x6e, 0x6f, 0x66, 0x6f,
	0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x22, 0x95, 0x01, 0x0a, 0x0e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x44, 0x0a, 0x11, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2f, 0x0a,
	0x06, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x61, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x61, 0x5f, 0x78, 0x65, 0x6e, 0x6f, 0x66, 0x6f, 0x6e,
	0x2e, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x06, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x73, 0x22, 0x52,
	0x0a, 0x05, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x73,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x61, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x61, 0x5f, 0x78, 0x65, 0x6e, 0x6f, 0x66, 0x6f, 0x6e,
	0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x22, 0x36, 0x0a, 0x07, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x74, 0x22, 0x78, 0x0a, 0x0f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x68,
	0x65, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x57,
	0x6f, 0x72, 0x64, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x0d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x65, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x71, 0x75, 0x69, 0x7a, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x69, 0x7a, 0x57, 0x6f, 0x72, 0x64, 0x22, 0xe4, 0x01,
	0x0a, 0x0c, 0x51, 0x75, 0x69, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x66, 0x75, 0x6c, 0x6c, 0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x75, 0x6c, 0x6c, 0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x71, 0x75, 0x69, 0x7a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x61, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x61, 0x5f, 0x78, 0x65, 0x6e, 0x6f,
	0x66, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x69, 0x7a, 0x52, 0x04, 0x71, 0x75, 0x69, 0x7a, 0x12, 0x44,
	0x0a, 0x0b, 0x67, 0x72, 0x61, 0x6d, 0x6d, 0x61, 0x72, 0x51, 0x75, 0x69, 0x7a, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x61, 0x5f, 0x78,
	0x65, 0x6e, 0x6f, 0x66, 0x6f, 0x6e, 0x2e, 0x47, 0x72, 0x61, 0x6d, 0x6d, 0x61, 0x72, 0x51, 0x75,
	0x69, 0x7a, 0x41, 0x64, 0x64, 0x65, 0x64, 0x52, 0x0b, 0x67, 0x72, 0x61, 0x6d, 0x6d, 0x61, 0x72,
	0x51, 0x75, 0x69, 0x7a, 0x22, 0x7d, 0x0a, 0x04, 0x51, 0x75, 0x69, 0x7a, 0x12, 0x1a, 0x0a, 0x08,
	0x71, 0x75, 0x69, 0x7a, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x71, 0x75, 0x69, 0x7a, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x66, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x33,
	0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x61, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x61, 0x5f, 0x78, 0x65, 0x6e, 0x6f, 0x66,
	0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x25, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x71, 0x75, 0x69, 0x7a, 0x57, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x71, 0x75, 0x69, 0x7a, 0x57, 0x6f, 0x72, 0x64, 0x22, 0xb9, 0x01, 0x0a, 0x10, 0x47,
	0x72, 0x61, 0x6d, 0x6d, 0x61, 0x72, 0x51, 0x75, 0x69, 0x7a, 0x41, 0x64, 0x64, 0x65, 0x64, 0x12,
	0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x54,
	0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x64, 0x49,
	0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x65, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x33, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x61, 0x5f, 0x78, 0x65,
	0x6e, 0x6f, 0x66, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x68, 0x0a, 0x0e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x72, 0x72,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x6f, 0x72, 0x72, 0x65,
	0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x69, 0x7a, 0x57, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x69, 0x7a, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x49, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x49, 0x6e, 0x54, 0x65, 0x78, 0x74,
	0x32, 0xcc, 0x02, 0x0a, 0x07, 0x58, 0x65, 0x6e, 0x6f, 0x66, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x06,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x69,
	0x61, 0x5f, 0x78, 0x65, 0x6e, 0x6f, 0x66, 0x6f, 0x6e, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x6f, 0x6c, 0x6f, 0x67,
	0x69, 0x61, 0x5f, 0x78, 0x65, 0x6e, 0x6f, 0x66, 0x6f, 0x6e, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x07, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x69,
	0x61, 0x5f, 0x78, 0x65, 0x6e, 0x6f, 0x66, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x6f, 0x6c, 0x6f,
	0x67, 0x69, 0x61, 0x5f, 0x78, 0x65, 0x6e, 0x6f, 0x66, 0x6f, 0x6e, 0x2e, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x00, 0x12,
	0x4f, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x61, 0x70,
	0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x61, 0x5f, 0x78, 0x65, 0x6e, 0x6f, 0x66, 0x6f, 0x6e, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x61, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x61, 0x5f, 0x78, 0x65, 0x6e, 0x6f, 0x66, 0x6f,
	0x6e, 0x2e, 0x51, 0x75, 0x69, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4d, 0x0a, 0x06, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x6f,
	0x6c, 0x6f, 0x67, 0x69, 0x61, 0x5f, 0x78, 0x65, 0x6e, 0x6f, 0x66, 0x6f, 0x6e, 0x2e, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70,
	0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x61, 0x5f, 0x78, 0x65, 0x6e, 0x6f, 0x66, 0x6f, 0x6e, 0x2e, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x64,
	0x79, 0x73, 0x73, 0x65, 0x69, 0x61, 0x2d, 0x67, 0x72, 0x65, 0x65, 0x6b, 0x2f, 0x61, 0x70, 0x6f,
	0x6c, 0x6f, 0x67, 0x69, 0x61, 0x2f, 0x78, 0x65, 0x6e, 0x6f, 0x66, 0x6f, 0x6e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_xenofon_proto_rawDescOnce sync.Once
	file_proto_xenofon_proto_rawDescData = file_proto_xenofon_proto_rawDesc
)

func file_proto_xenofon_proto_rawDescGZIP() []byte {
	file_proto_xenofon_proto_rawDescOnce.Do(func() {
		file_proto_xenofon_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_xenofon_proto_rawDescData)
	})
	return file_proto_xenofon_proto_rawDescData
}

var file_proto_xenofon_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_xenofon_proto_goTypes = []interface{}{
	(*HealthRequest)(nil),     // 0: apologia_xenofon.HealthRequest
	(*OptionsRequest)(nil),    // 1: apologia_xenofon.OptionsRequest
	(*HealthResponse)(nil),    // 2: apologia_xenofon.HealthResponse
	(*DatabaseHealth)(nil),    // 3: apologia_xenofon.DatabaseHealth
	(*AggregatedOptions)(nil), // 4: apologia_xenofon.AggregatedOptions
	(*Theme)(nil),             // 5: apologia_xenofon.Theme
	(*Segment)(nil),           // 6: apologia_xenofon.Segment
	(*CreationRequest)(nil),   // 7: apologia_xenofon.CreationRequest
	(*AnswerRequest)(nil),     // 8: apologia_xenofon.AnswerRequest
	(*QuizResponse)(nil),      // 9: apologia_xenofon.QuizResponse
	(*Quiz)(nil),              // 10: apologia_xenofon.Quiz
	(*Options)(nil),           // 11: apologia_xenofon.Options
	(*GrammarQuizAdded)(nil),  // 12: apologia_xenofon.GrammarQuizAdded
	(*AnswerResponse)(nil),    // 13: apologia_xenofon.AnswerResponse
}
var file_proto_xenofon_proto_depIdxs = []int32{
	3,  // 0: apologia_xenofon.HealthResponse.database_health:type_name -> apologia_xenofon.DatabaseHealth
	5,  // 1: apologia_xenofon.AggregatedOptions.themes:type_name -> apologia_xenofon.Theme
	6,  // 2: apologia_xenofon.Theme.segments:type_name -> apologia_xenofon.Segment
	10, // 3: apologia_xenofon.QuizResponse.quiz:type_name -> apologia_xenofon.Quiz
	12, // 4: apologia_xenofon.QuizResponse.grammarQuiz:type_name -> apologia_xenofon.GrammarQuizAdded
	11, // 5: apologia_xenofon.Quiz.options:type_name -> apologia_xenofon.Options
	11, // 6: apologia_xenofon.GrammarQuizAdded.options:type_name -> apologia_xenofon.Options
	0,  // 7: apologia_xenofon.Xenofon.Health:input_type -> apologia_xenofon.HealthRequest
	1,  // 8: apologia_xenofon.Xenofon.Options:input_type -> apologia_xenofon.OptionsRequest
	7,  // 9: apologia_xenofon.Xenofon.Question:input_type -> apologia_xenofon.CreationRequest
	8,  // 10: apologia_xenofon.Xenofon.Answer:input_type -> apologia_xenofon.AnswerRequest
	2,  // 11: apologia_xenofon.Xenofon.Health:output_type -> apologia_xenofon.HealthResponse
	4,  // 12: apologia_xenofon.Xenofon.Options:output_type -> apologia_xenofon.AggregatedOptions
	9,  // 13: apologia_xenofon.Xenofon.Question:output_type -> apologia_xenofon.QuizResponse
	13, // 14: apologia_xenofon.Xenofon.Answer:output_type -> apologia_xenofon.AnswerResponse
	11, // [11:15] is the sub-list for method output_type
	7,  // [7:11] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_xenofon_proto_init() }
func file_proto_xenofon_proto_init() {
	if File_proto_xenofon_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_xenofon_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_xenofon_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_xenofon_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_xenofon_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseHealth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_xenofon_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregatedOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_xenofon_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Theme); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_xenofon_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Segment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_xenofon_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_xenofon_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnswerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_xenofon_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuizResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_xenofon_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Quiz); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_xenofon_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_xenofon_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrammarQuizAdded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_xenofon_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnswerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_xenofon_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_xenofon_proto_goTypes,
		DependencyIndexes: file_proto_xenofon_proto_depIdxs,
		MessageInfos:      file_proto_xenofon_proto_msgTypes,
	}.Build()
	File_proto_xenofon_proto = out.File
	file_proto_xenofon_proto_rawDesc = nil
	file_proto_xenofon_proto_goTypes = nil
	file_proto_xenofon_proto_depIdxs = nil
}

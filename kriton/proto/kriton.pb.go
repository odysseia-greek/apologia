// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.29.3
// source: proto/kriton.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Empty request messages since these endpoints require no body
type HealthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kriton_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kriton_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_proto_kriton_proto_rawDescGZIP(), []int{0}
}

type OptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OptionsRequest) Reset() {
	*x = OptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kriton_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionsRequest) ProtoMessage() {}

func (x *OptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kriton_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionsRequest.ProtoReflect.Descriptor instead.
func (*OptionsRequest) Descriptor() ([]byte, []int) {
	return file_proto_kriton_proto_rawDescGZIP(), []int{1}
}

// Response message for health check
type HealthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Healthy        bool            `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Time           string          `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Version        string          `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	DatabaseHealth *DatabaseHealth `protobuf:"bytes,4,opt,name=database_health,json=databaseHealth,proto3" json:"database_health,omitempty"`
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kriton_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kriton_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_proto_kriton_proto_rawDescGZIP(), []int{2}
}

func (x *HealthResponse) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *HealthResponse) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *HealthResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *HealthResponse) GetDatabaseHealth() *DatabaseHealth {
	if x != nil {
		return x.DatabaseHealth
	}
	return nil
}

// Nested message for database health details
type DatabaseHealth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Healthy       bool   `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	ClusterName   string `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	ServerName    string `protobuf:"bytes,3,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
	ServerVersion string `protobuf:"bytes,4,opt,name=server_version,json=serverVersion,proto3" json:"server_version,omitempty"`
}

func (x *DatabaseHealth) Reset() {
	*x = DatabaseHealth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kriton_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseHealth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseHealth) ProtoMessage() {}

func (x *DatabaseHealth) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kriton_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseHealth.ProtoReflect.Descriptor instead.
func (*DatabaseHealth) Descriptor() ([]byte, []int) {
	return file_proto_kriton_proto_rawDescGZIP(), []int{3}
}

func (x *DatabaseHealth) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *DatabaseHealth) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *DatabaseHealth) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *DatabaseHealth) GetServerVersion() string {
	if x != nil {
		return x.ServerVersion
	}
	return ""
}

// Response message for quiz options
type AggregatedOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Themes []*Theme `protobuf:"bytes,1,rep,name=themes,proto3" json:"themes,omitempty"`
}

func (x *AggregatedOptions) Reset() {
	*x = AggregatedOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kriton_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregatedOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregatedOptions) ProtoMessage() {}

func (x *AggregatedOptions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kriton_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregatedOptions.ProtoReflect.Descriptor instead.
func (*AggregatedOptions) Descriptor() ([]byte, []int) {
	return file_proto_kriton_proto_rawDescGZIP(), []int{4}
}

func (x *AggregatedOptions) GetThemes() []*Theme {
	if x != nil {
		return x.Themes
	}
	return nil
}

// Structure for quiz themes
type Theme struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MaxSet float32 `protobuf:"fixed32,2,opt,name=max_set,json=maxSet,proto3" json:"max_set,omitempty"`
}

func (x *Theme) Reset() {
	*x = Theme{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kriton_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Theme) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Theme) ProtoMessage() {}

func (x *Theme) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kriton_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Theme.ProtoReflect.Descriptor instead.
func (*Theme) Descriptor() ([]byte, []int) {
	return file_proto_kriton_proto_rawDescGZIP(), []int{5}
}

func (x *Theme) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Theme) GetMaxSet() float32 {
	if x != nil {
		return x.MaxSet
	}
	return 0
}

type AnswerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Percentage    float64               `protobuf:"fixed64,1,opt,name=percentage,proto3" json:"percentage,omitempty"`
	Input         []*DialogueContent    `protobuf:"bytes,2,rep,name=input,proto3" json:"input,omitempty"`
	Answer        []*DialogueContent    `protobuf:"bytes,3,rep,name=answer,proto3" json:"answer,omitempty"`
	WronglyPlaced []*DialogueCorrection `protobuf:"bytes,4,rep,name=wronglyPlaced,proto3" json:"wronglyPlaced,omitempty"`
}

func (x *AnswerResponse) Reset() {
	*x = AnswerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kriton_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnswerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerResponse) ProtoMessage() {}

func (x *AnswerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kriton_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerResponse.ProtoReflect.Descriptor instead.
func (*AnswerResponse) Descriptor() ([]byte, []int) {
	return file_proto_kriton_proto_rawDescGZIP(), []int{6}
}

func (x *AnswerResponse) GetPercentage() float64 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *AnswerResponse) GetInput() []*DialogueContent {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *AnswerResponse) GetAnswer() []*DialogueContent {
	if x != nil {
		return x.Answer
	}
	return nil
}

func (x *AnswerResponse) GetWronglyPlaced() []*DialogueCorrection {
	if x != nil {
		return x.WronglyPlaced
	}
	return nil
}

type DialogueContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Translation string `protobuf:"bytes,1,opt,name=translation,proto3" json:"translation,omitempty"`
	Greek       string `protobuf:"bytes,2,opt,name=greek,proto3" json:"greek,omitempty"`
	Place       int32  `protobuf:"varint,3,opt,name=place,proto3" json:"place,omitempty"`
	Speaker     string `protobuf:"bytes,4,opt,name=speaker,proto3" json:"speaker,omitempty"`
}

func (x *DialogueContent) Reset() {
	*x = DialogueContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kriton_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DialogueContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DialogueContent) ProtoMessage() {}

func (x *DialogueContent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kriton_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DialogueContent.ProtoReflect.Descriptor instead.
func (*DialogueContent) Descriptor() ([]byte, []int) {
	return file_proto_kriton_proto_rawDescGZIP(), []int{7}
}

func (x *DialogueContent) GetTranslation() string {
	if x != nil {
		return x.Translation
	}
	return ""
}

func (x *DialogueContent) GetGreek() string {
	if x != nil {
		return x.Greek
	}
	return ""
}

func (x *DialogueContent) GetPlace() int32 {
	if x != nil {
		return x.Place
	}
	return 0
}

func (x *DialogueContent) GetSpeaker() string {
	if x != nil {
		return x.Speaker
	}
	return ""
}

type DialogueCorrection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Translation  string `protobuf:"bytes,1,opt,name=translation,proto3" json:"translation,omitempty"`
	Greek        string `protobuf:"bytes,2,opt,name=greek,proto3" json:"greek,omitempty"`
	Place        int32  `protobuf:"varint,3,opt,name=place,proto3" json:"place,omitempty"`
	Speaker      string `protobuf:"bytes,4,opt,name=speaker,proto3" json:"speaker,omitempty"`
	CorrectPlace int32  `protobuf:"varint,5,opt,name=correctPlace,proto3" json:"correctPlace,omitempty"`
}

func (x *DialogueCorrection) Reset() {
	*x = DialogueCorrection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kriton_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DialogueCorrection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DialogueCorrection) ProtoMessage() {}

func (x *DialogueCorrection) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kriton_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DialogueCorrection.ProtoReflect.Descriptor instead.
func (*DialogueCorrection) Descriptor() ([]byte, []int) {
	return file_proto_kriton_proto_rawDescGZIP(), []int{8}
}

func (x *DialogueCorrection) GetTranslation() string {
	if x != nil {
		return x.Translation
	}
	return ""
}

func (x *DialogueCorrection) GetGreek() string {
	if x != nil {
		return x.Greek
	}
	return ""
}

func (x *DialogueCorrection) GetPlace() int32 {
	if x != nil {
		return x.Place
	}
	return 0
}

func (x *DialogueCorrection) GetSpeaker() string {
	if x != nil {
		return x.Speaker
	}
	return ""
}

func (x *DialogueCorrection) GetCorrectPlace() int32 {
	if x != nil {
		return x.CorrectPlace
	}
	return 0
}

type QuizResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuizMetadata *QuizMetadata      `protobuf:"bytes,1,opt,name=quizMetadata,proto3" json:"quizMetadata,omitempty"`
	Theme        string             `protobuf:"bytes,2,opt,name=theme,proto3" json:"theme,omitempty"`
	Set          string             `protobuf:"bytes,3,opt,name=set,proto3" json:"set,omitempty"`
	Segment      string             `protobuf:"bytes,4,opt,name=segment,proto3" json:"segment,omitempty"`
	Reference    string             `protobuf:"bytes,5,opt,name=reference,proto3" json:"reference,omitempty"`
	Dialogue     *Dialogue          `protobuf:"bytes,6,opt,name=dialogue,proto3" json:"dialogue,omitempty"`
	Content      []*DialogueContent `protobuf:"bytes,7,rep,name=content,proto3" json:"content,omitempty"`
}

func (x *QuizResponse) Reset() {
	*x = QuizResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kriton_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuizResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuizResponse) ProtoMessage() {}

func (x *QuizResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kriton_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuizResponse.ProtoReflect.Descriptor instead.
func (*QuizResponse) Descriptor() ([]byte, []int) {
	return file_proto_kriton_proto_rawDescGZIP(), []int{9}
}

func (x *QuizResponse) GetQuizMetadata() *QuizMetadata {
	if x != nil {
		return x.QuizMetadata
	}
	return nil
}

func (x *QuizResponse) GetTheme() string {
	if x != nil {
		return x.Theme
	}
	return ""
}

func (x *QuizResponse) GetSet() string {
	if x != nil {
		return x.Set
	}
	return ""
}

func (x *QuizResponse) GetSegment() string {
	if x != nil {
		return x.Segment
	}
	return ""
}

func (x *QuizResponse) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *QuizResponse) GetDialogue() *Dialogue {
	if x != nil {
		return x.Dialogue
	}
	return nil
}

func (x *QuizResponse) GetContent() []*DialogueContent {
	if x != nil {
		return x.Content
	}
	return nil
}

type QuizMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *QuizMetadata) Reset() {
	*x = QuizMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kriton_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuizMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuizMetadata) ProtoMessage() {}

func (x *QuizMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kriton_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuizMetadata.ProtoReflect.Descriptor instead.
func (*QuizMetadata) Descriptor() ([]byte, []int) {
	return file_proto_kriton_proto_rawDescGZIP(), []int{10}
}

func (x *QuizMetadata) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type Dialogue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Introduction  string     `protobuf:"bytes,1,opt,name=introduction,proto3" json:"introduction,omitempty"`
	Speakers      []*Speaker `protobuf:"bytes,2,rep,name=speakers,proto3" json:"speakers,omitempty"`
	Section       string     `protobuf:"bytes,3,opt,name=section,proto3" json:"section,omitempty"`
	LinkToPerseus string     `protobuf:"bytes,4,opt,name=linkToPerseus,proto3" json:"linkToPerseus,omitempty"`
}

func (x *Dialogue) Reset() {
	*x = Dialogue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kriton_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dialogue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dialogue) ProtoMessage() {}

func (x *Dialogue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kriton_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dialogue.ProtoReflect.Descriptor instead.
func (*Dialogue) Descriptor() ([]byte, []int) {
	return file_proto_kriton_proto_rawDescGZIP(), []int{11}
}

func (x *Dialogue) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *Dialogue) GetSpeakers() []*Speaker {
	if x != nil {
		return x.Speakers
	}
	return nil
}

func (x *Dialogue) GetSection() string {
	if x != nil {
		return x.Section
	}
	return ""
}

func (x *Dialogue) GetLinkToPerseus() string {
	if x != nil {
		return x.LinkToPerseus
	}
	return ""
}

type Speaker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Shorthand   string `protobuf:"bytes,2,opt,name=shorthand,proto3" json:"shorthand,omitempty"`
	Translation string `protobuf:"bytes,3,opt,name=translation,proto3" json:"translation,omitempty"`
}

func (x *Speaker) Reset() {
	*x = Speaker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kriton_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Speaker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Speaker) ProtoMessage() {}

func (x *Speaker) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kriton_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Speaker.ProtoReflect.Descriptor instead.
func (*Speaker) Descriptor() ([]byte, []int) {
	return file_proto_kriton_proto_rawDescGZIP(), []int{12}
}

func (x *Speaker) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Speaker) GetShorthand() string {
	if x != nil {
		return x.Shorthand
	}
	return ""
}

func (x *Speaker) GetTranslation() string {
	if x != nil {
		return x.Translation
	}
	return ""
}

type CreationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Theme string `protobuf:"bytes,1,opt,name=theme,proto3" json:"theme,omitempty"`
	Set   string `protobuf:"bytes,2,opt,name=set,proto3" json:"set,omitempty"`
}

func (x *CreationRequest) Reset() {
	*x = CreationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kriton_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreationRequest) ProtoMessage() {}

func (x *CreationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kriton_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreationRequest.ProtoReflect.Descriptor instead.
func (*CreationRequest) Descriptor() ([]byte, []int) {
	return file_proto_kriton_proto_rawDescGZIP(), []int{13}
}

func (x *CreationRequest) GetTheme() string {
	if x != nil {
		return x.Theme
	}
	return ""
}

func (x *CreationRequest) GetSet() string {
	if x != nil {
		return x.Set
	}
	return ""
}

type AnswerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Theme   string             `protobuf:"bytes,1,opt,name=theme,proto3" json:"theme,omitempty"`
	Set     string             `protobuf:"bytes,2,opt,name=set,proto3" json:"set,omitempty"`
	Content []*DialogueContent `protobuf:"bytes,3,rep,name=content,proto3" json:"content,omitempty"`
}

func (x *AnswerRequest) Reset() {
	*x = AnswerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kriton_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnswerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerRequest) ProtoMessage() {}

func (x *AnswerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kriton_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerRequest.ProtoReflect.Descriptor instead.
func (*AnswerRequest) Descriptor() ([]byte, []int) {
	return file_proto_kriton_proto_rawDescGZIP(), []int{14}
}

func (x *AnswerRequest) GetTheme() string {
	if x != nil {
		return x.Theme
	}
	return ""
}

func (x *AnswerRequest) GetSet() string {
	if x != nil {
		return x.Set
	}
	return ""
}

func (x *AnswerRequest) GetContent() []*DialogueContent {
	if x != nil {
		return x.Content
	}
	return nil
}

var File_proto_kriton_proto protoreflect.FileDescriptor

var file_proto_kriton_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6b, 0x72, 0x69, 0x74, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x61, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x61, 0x5f, 0x6b,
	0x72, 0x69, 0x74, 0x6f, 0x6e, 0x22, 0x0f, 0x0a, 0x0d, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x10, 0x0a, 0x0e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa2, 0x01, 0x0a, 0x0e, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61,
	0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x61, 0x5f, 0x6b, 0x72, 0x69, 0x74, 0x6f, 0x6e, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x0e, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x22, 0x95, 0x01,
	0x0a, 0x0e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x43, 0x0a, 0x11, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x74, 0x68,
	0x65, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x6f,
	0x6c, 0x6f, 0x67, 0x69, 0x61, 0x5f, 0x6b, 0x72, 0x69, 0x74, 0x6f, 0x6e, 0x2e, 0x54, 0x68, 0x65,
	0x6d, 0x65, 0x52, 0x06, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x73, 0x22, 0x34, 0x0a, 0x05, 0x54, 0x68,
	0x65, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x73,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x74,
	0x22, 0xed, 0x01, 0x0a, 0x0e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x61, 0x5f, 0x6b, 0x72,
	0x69, 0x74, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x38, 0x0a, 0x06, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70,
	0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x61, 0x5f, 0x6b, 0x72, 0x69, 0x74, 0x6f, 0x6e, 0x2e, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x0d, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x6c, 0x79,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61,
	0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x61, 0x5f, 0x6b, 0x72, 0x69, 0x74, 0x6f, 0x6e, 0x2e, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0d, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x6c, 0x79, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x64,
	0x22, 0x79, 0x0a, 0x0f, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x65, 0x65, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x65, 0x65, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x22, 0xa0, 0x01, 0x0a, 0x12,
	0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x65, 0x65, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x65, 0x65, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f,
	0x72, 0x72, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x22, 0xa4,
	0x02, 0x0a, 0x0c, 0x51, 0x75, 0x69, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x41, 0x0a, 0x0c, 0x71, 0x75, 0x69, 0x7a, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x61,
	0x5f, 0x6b, 0x72, 0x69, 0x74, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x69, 0x7a, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x71, 0x75, 0x69, 0x7a, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x61, 0x5f,
	0x6b, 0x72, 0x69, 0x74, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x52,
	0x08, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x6f,
	0x6c, 0x6f, 0x67, 0x69, 0x61, 0x5f, 0x6b, 0x72, 0x69, 0x74, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x75, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x2a, 0x0a, 0x0c, 0x51, 0x75, 0x69, 0x7a, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x22, 0xa4, 0x01, 0x0a, 0x08, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x61, 0x5f,
	0x6b, 0x72, 0x69, 0x74, 0x6f, 0x6e, 0x2e, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x52, 0x08,
	0x73, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x6b, 0x54, 0x6f, 0x50, 0x65, 0x72, 0x73,
	0x65, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x69, 0x6e, 0x6b, 0x54,
	0x6f, 0x50, 0x65, 0x72, 0x73, 0x65, 0x75, 0x73, 0x22, 0x5d, 0x0a, 0x07, 0x53, 0x70, 0x65, 0x61,
	0x6b, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x68, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x68, 0x61, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x39, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x68,
	0x65, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73,
	0x65, 0x74, 0x22, 0x73, 0x0a, 0x0d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x65, 0x74, 0x12, 0x3a, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61,
	0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x61, 0x5f, 0x6b, 0x72, 0x69, 0x74, 0x6f, 0x6e, 0x2e, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x32, 0xc3, 0x02, 0x0a, 0x06, 0x4b, 0x72, 0x69, 0x74,
	0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x1e, 0x2e, 0x61,
	0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x61, 0x5f, 0x6b, 0x72, 0x69, 0x74, 0x6f, 0x6e, 0x2e, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61,
	0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x61, 0x5f, 0x6b, 0x72, 0x69, 0x74, 0x6f, 0x6e, 0x2e, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x50, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x6f,
	0x6c, 0x6f, 0x67, 0x69, 0x61, 0x5f, 0x6b, 0x72, 0x69, 0x74, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70,
	0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x61, 0x5f, 0x6b, 0x72, 0x69, 0x74, 0x6f, 0x6e, 0x2e, 0x41, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x00, 0x12, 0x4d, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e,
	0x61, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x61, 0x5f, 0x6b, 0x72, 0x69, 0x74, 0x6f, 0x6e, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x61, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x61, 0x5f, 0x6b, 0x72, 0x69, 0x74, 0x6f,
	0x6e, 0x2e, 0x51, 0x75, 0x69, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4b, 0x0a, 0x06, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x6f,
	0x6c, 0x6f, 0x67, 0x69, 0x61, 0x5f, 0x6b, 0x72, 0x69, 0x74, 0x6f, 0x6e, 0x2e, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x6f,
	0x6c, 0x6f, 0x67, 0x69, 0x61, 0x5f, 0x6b, 0x72, 0x69, 0x74, 0x6f, 0x6e, 0x2e, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x31, 0x5a,
	0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x64, 0x79, 0x73,
	0x73, 0x65, 0x69, 0x61, 0x2d, 0x67, 0x72, 0x65, 0x65, 0x6b, 0x2f, 0x61, 0x70, 0x6f, 0x6c, 0x6f,
	0x67, 0x69, 0x61, 0x2f, 0x6b, 0x72, 0x69, 0x74, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_kriton_proto_rawDescOnce sync.Once
	file_proto_kriton_proto_rawDescData = file_proto_kriton_proto_rawDesc
)

func file_proto_kriton_proto_rawDescGZIP() []byte {
	file_proto_kriton_proto_rawDescOnce.Do(func() {
		file_proto_kriton_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_kriton_proto_rawDescData)
	})
	return file_proto_kriton_proto_rawDescData
}

var file_proto_kriton_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proto_kriton_proto_goTypes = []interface{}{
	(*HealthRequest)(nil),      // 0: apologia_kriton.HealthRequest
	(*OptionsRequest)(nil),     // 1: apologia_kriton.OptionsRequest
	(*HealthResponse)(nil),     // 2: apologia_kriton.HealthResponse
	(*DatabaseHealth)(nil),     // 3: apologia_kriton.DatabaseHealth
	(*AggregatedOptions)(nil),  // 4: apologia_kriton.AggregatedOptions
	(*Theme)(nil),              // 5: apologia_kriton.Theme
	(*AnswerResponse)(nil),     // 6: apologia_kriton.AnswerResponse
	(*DialogueContent)(nil),    // 7: apologia_kriton.DialogueContent
	(*DialogueCorrection)(nil), // 8: apologia_kriton.DialogueCorrection
	(*QuizResponse)(nil),       // 9: apologia_kriton.QuizResponse
	(*QuizMetadata)(nil),       // 10: apologia_kriton.QuizMetadata
	(*Dialogue)(nil),           // 11: apologia_kriton.Dialogue
	(*Speaker)(nil),            // 12: apologia_kriton.Speaker
	(*CreationRequest)(nil),    // 13: apologia_kriton.CreationRequest
	(*AnswerRequest)(nil),      // 14: apologia_kriton.AnswerRequest
}
var file_proto_kriton_proto_depIdxs = []int32{
	3,  // 0: apologia_kriton.HealthResponse.database_health:type_name -> apologia_kriton.DatabaseHealth
	5,  // 1: apologia_kriton.AggregatedOptions.themes:type_name -> apologia_kriton.Theme
	7,  // 2: apologia_kriton.AnswerResponse.input:type_name -> apologia_kriton.DialogueContent
	7,  // 3: apologia_kriton.AnswerResponse.answer:type_name -> apologia_kriton.DialogueContent
	8,  // 4: apologia_kriton.AnswerResponse.wronglyPlaced:type_name -> apologia_kriton.DialogueCorrection
	10, // 5: apologia_kriton.QuizResponse.quizMetadata:type_name -> apologia_kriton.QuizMetadata
	11, // 6: apologia_kriton.QuizResponse.dialogue:type_name -> apologia_kriton.Dialogue
	7,  // 7: apologia_kriton.QuizResponse.content:type_name -> apologia_kriton.DialogueContent
	12, // 8: apologia_kriton.Dialogue.speakers:type_name -> apologia_kriton.Speaker
	7,  // 9: apologia_kriton.AnswerRequest.content:type_name -> apologia_kriton.DialogueContent
	0,  // 10: apologia_kriton.Kriton.Health:input_type -> apologia_kriton.HealthRequest
	1,  // 11: apologia_kriton.Kriton.Options:input_type -> apologia_kriton.OptionsRequest
	13, // 12: apologia_kriton.Kriton.Question:input_type -> apologia_kriton.CreationRequest
	14, // 13: apologia_kriton.Kriton.Answer:input_type -> apologia_kriton.AnswerRequest
	2,  // 14: apologia_kriton.Kriton.Health:output_type -> apologia_kriton.HealthResponse
	4,  // 15: apologia_kriton.Kriton.Options:output_type -> apologia_kriton.AggregatedOptions
	9,  // 16: apologia_kriton.Kriton.Question:output_type -> apologia_kriton.QuizResponse
	6,  // 17: apologia_kriton.Kriton.Answer:output_type -> apologia_kriton.AnswerResponse
	14, // [14:18] is the sub-list for method output_type
	10, // [10:14] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_kriton_proto_init() }
func file_proto_kriton_proto_init() {
	if File_proto_kriton_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_kriton_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kriton_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kriton_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kriton_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseHealth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kriton_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregatedOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kriton_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Theme); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kriton_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnswerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kriton_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DialogueContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kriton_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DialogueCorrection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kriton_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuizResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kriton_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuizMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kriton_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dialogue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kriton_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Speaker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kriton_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kriton_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnswerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_kriton_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_kriton_proto_goTypes,
		DependencyIndexes: file_proto_kriton_proto_depIdxs,
		MessageInfos:      file_proto_kriton_proto_msgTypes,
	}.Build()
	File_proto_kriton_proto = out.File
	file_proto_kriton_proto_rawDesc = nil
	file_proto_kriton_proto_goTypes = nil
	file_proto_kriton_proto_depIdxs = nil
}

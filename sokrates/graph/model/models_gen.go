// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type AnalyzeResult struct {
	Author        *string `json:"author,omitempty"`
	Book          *string `json:"book,omitempty"`
	Reference     *string `json:"reference,omitempty"`
	ReferenceLink *string `json:"referenceLink,omitempty"`
	Text          *Rhema  `json:"text,omitempty"`
}

type AnalyzeTextResponse struct {
	Conjugations []*ConjugationResponse `json:"conjugations,omitempty"`
	Results      []*AnalyzeResult       `json:"results,omitempty"`
	Rootword     *string                `json:"rootword,omitempty"`
}

type ComprehensiveResponse struct {
	Correct      *bool                `json:"correct,omitempty"`
	FoundInText  *AnalyzeTextResponse `json:"foundInText,omitempty"`
	QuizWord     *string              `json:"quizWord,omitempty"`
	SimilarWords []*Hit               `json:"similarWords,omitempty"`
}

type ConjugationResponse struct {
	Rule *string `json:"rule,omitempty"`
	Word *string `json:"word,omitempty"`
}

type Hit struct {
	Dutch      *string `json:"dutch,omitempty"`
	English    *string `json:"english,omitempty"`
	Greek      *string `json:"greek,omitempty"`
	LinkedWord *string `json:"linkedWord,omitempty"`
	Original   *string `json:"original,omitempty"`
}

type MediaAnswerInput struct {
	Theme         *string `json:"theme,omitempty"`
	Set           *string `json:"set,omitempty"`
	Segment       *string `json:"segment,omitempty"`
	QuizWord      *string `json:"quizWord,omitempty"`
	Answer        *string `json:"answer,omitempty"`
	Comprehensive *bool   `json:"comprehensive,omitempty"`
}

type MediaQuizInput struct {
	ExcludeWords []*string `json:"excludeWords,omitempty"`
	Theme        *string   `json:"theme,omitempty"`
	Set          *string   `json:"set,omitempty"`
	Segment      *string   `json:"segment,omitempty"`
	Order        *string   `json:"order,omitempty"`
}

type Options struct {
	AudioURL *string `json:"audioUrl,omitempty"`
	ImageURL *string `json:"imageUrl,omitempty"`
	Option   *string `json:"option,omitempty"`
}

type Query struct {
}

type QuizResponse struct {
	NumberOfItems *int32     `json:"numberOfItems,omitempty"`
	Options       []*Options `json:"options,omitempty"`
	QuizItem      *string    `json:"quizItem,omitempty"`
}

type Rhema struct {
	Greek        *string   `json:"greek,omitempty"`
	Section      *string   `json:"section,omitempty"`
	Translations []*string `json:"translations,omitempty"`
}
